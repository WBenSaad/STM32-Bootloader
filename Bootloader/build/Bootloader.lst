ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"Bootloader.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.JumpToMain,"ax",%progbits
  16              		.align	1
  17              		.global	JumpToMain
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	JumpToMain:
  25              	.LFB65:
  26              		.file 1 "Core/Src/Bootloader.c"
   1:Core/Src/Bootloader.c **** /* USER CODE BEGIN Header */
   2:Core/Src/Bootloader.c **** /**
   3:Core/Src/Bootloader.c ****   ******************************************************************************
   4:Core/Src/Bootloader.c ****   * @file           : main.c
   5:Core/Src/Bootloader.c ****   * @brief          : Main program body
   6:Core/Src/Bootloader.c ****   ******************************************************************************
   7:Core/Src/Bootloader.c ****   * @attention
   8:Core/Src/Bootloader.c ****   *
   9:Core/Src/Bootloader.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/Bootloader.c ****   * All rights reserved.</center></h2>
  11:Core/Src/Bootloader.c ****   *
  12:Core/Src/Bootloader.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/Bootloader.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/Bootloader.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/Bootloader.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/Bootloader.c ****   *
  17:Core/Src/Bootloader.c ****   ******************************************************************************
  18:Core/Src/Bootloader.c ****   */
  19:Core/Src/Bootloader.c **** /* USER CODE END Header */
  20:Core/Src/Bootloader.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/Bootloader.c **** #include "main.h"
  22:Core/Src/Bootloader.c **** #include "crc.h"
  23:Core/Src/Bootloader.c **** #include "tim.h"
  24:Core/Src/Bootloader.c **** #include "usart.h"
  25:Core/Src/Bootloader.c **** #include "gpio.h"
  26:Core/Src/Bootloader.c **** 
  27:Core/Src/Bootloader.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/Bootloader.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/Bootloader.c **** #define 	App_Adress			  0x8004000UL
  30:Core/Src/Bootloader.c **** #define	  Reset_Handler			(App_Adress + 4)
  31:Core/Src/Bootloader.c **** typedef   void (*pFunction) (void);
  32:Core/Src/Bootloader.c **** 
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 2


  33:Core/Src/Bootloader.c ****  __attribute__((section(".noinit"))) volatile uint32_t test ;
  34:Core/Src/Bootloader.c **** 
  35:Core/Src/Bootloader.c **** /* USER CODE END Includes */
  36:Core/Src/Bootloader.c **** 
  37:Core/Src/Bootloader.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/Bootloader.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/Bootloader.c **** //void  (*Jump)(void);
  40:Core/Src/Bootloader.c **** void  JumpToMain(void);
  41:Core/Src/Bootloader.c **** /* USER CODE END PTD */
  42:Core/Src/Bootloader.c **** 
  43:Core/Src/Bootloader.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/Bootloader.c **** /* USER CODE BEGIN PD */
  45:Core/Src/Bootloader.c **** /* USER CODE END PD */
  46:Core/Src/Bootloader.c **** 
  47:Core/Src/Bootloader.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/Bootloader.c **** /* USER CODE BEGIN PM */
  49:Core/Src/Bootloader.c **** 
  50:Core/Src/Bootloader.c **** /* USER CODE END PM */
  51:Core/Src/Bootloader.c **** 
  52:Core/Src/Bootloader.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/Bootloader.c **** 
  54:Core/Src/Bootloader.c **** /* USER CODE BEGIN PV */
  55:Core/Src/Bootloader.c **** 
  56:Core/Src/Bootloader.c **** /* USER CODE END PV */
  57:Core/Src/Bootloader.c **** 
  58:Core/Src/Bootloader.c **** /* Private function prototypes -----------------------------------------------*/
  59:Core/Src/Bootloader.c **** void SystemClock_Config(void);
  60:Core/Src/Bootloader.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/Bootloader.c **** 
  62:Core/Src/Bootloader.c **** void JumpToMain(void){
  27              		.loc 1 62 22 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  63:Core/Src/Bootloader.c **** 	
  64:Core/Src/Bootloader.c **** //pFunction  (*Jump)(void);
  65:Core/Src/Bootloader.c **** 
  66:Core/Src/Bootloader.c **** uint32_t reset_Handler =*(volatile uint32_t *)Reset_Handler;
  38              		.loc 1 66 1 view .LVU1
  39              		.loc 1 66 10 is_stmt 0 view .LVU2
  40 0002 0A4C     		ldr	r4, .L3
  41 0004 6568     		ldr	r5, [r4, #4]
  42              	.LVL0:
  67:Core/Src/Bootloader.c **** uint32_t msp_val = *(volatile uint32_t *)App_Adress;
  43              		.loc 1 67 1 is_stmt 1 view .LVU3
  44              		.loc 1 67 10 is_stmt 0 view .LVU4
  45 0006 2668     		ldr	r6, [r4]
  46              	.LVL1:
  68:Core/Src/Bootloader.c **** 
  69:Core/Src/Bootloader.c **** pFunction Jump= (pFunction) reset_Handler;
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 3


  47              		.loc 1 69 1 is_stmt 1 view .LVU5
  70:Core/Src/Bootloader.c **** 
  71:Core/Src/Bootloader.c **** 	  HAL_RCC_DeInit();
  48              		.loc 1 71 4 view .LVU6
  49 0008 FFF7FEFF 		bl	HAL_RCC_DeInit
  50              	.LVL2:
  72:Core/Src/Bootloader.c **** 	  HAL_DeInit();
  51              		.loc 1 72 4 view .LVU7
  52 000c FFF7FEFF 		bl	HAL_DeInit
  53              	.LVL3:
  73:Core/Src/Bootloader.c **** 
  74:Core/Src/Bootloader.c **** 	  SysTick->CTRL = 0;
  54              		.loc 1 74 4 view .LVU8
  55              		.loc 1 74 18 is_stmt 0 view .LVU9
  56 0010 4FF0E023 		mov	r3, #-536813568
  57 0014 0022     		movs	r2, #0
  58 0016 1A61     		str	r2, [r3, #16]
  75:Core/Src/Bootloader.c **** 	  SysTick->LOAD = 0;
  59              		.loc 1 75 4 is_stmt 1 view .LVU10
  60              		.loc 1 75 18 is_stmt 0 view .LVU11
  61 0018 5A61     		str	r2, [r3, #20]
  76:Core/Src/Bootloader.c **** 	  SysTick->VAL = 0;
  62              		.loc 1 76 4 is_stmt 1 view .LVU12
  63              		.loc 1 76 17 is_stmt 0 view .LVU13
  64 001a 9A61     		str	r2, [r3, #24]
  77:Core/Src/Bootloader.c **** 
  78:Core/Src/Bootloader.c **** SCB->VTOR = App_Adress;
  65              		.loc 1 78 1 is_stmt 1 view .LVU14
  66              		.loc 1 78 11 is_stmt 0 view .LVU15
  67 001c 03F55063 		add	r3, r3, #3328
  68 0020 9C60     		str	r4, [r3, #8]
  79:Core/Src/Bootloader.c **** 
  80:Core/Src/Bootloader.c **** 
  81:Core/Src/Bootloader.c **** __set_MSP(msp_val);
  69              		.loc 1 81 1 is_stmt 1 view .LVU16
  70              	.LVL4:
  71              	.LBB6:
  72              	.LBI6:
  73              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 4


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 5


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 6


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 7


 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 8


 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 9


 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
  74              		.loc 2 331 27 view .LVU17
  75              	.LBB7:
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
  76              		.loc 2 333 3 view .LVU18
  77              		.syntax unified
  78              	@ 333 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  79 0022 86F30888 		MSR msp, r6
  80              	@ 0 "" 2
  81              	.LVL5:
  82              		.loc 2 333 3 is_stmt 0 view .LVU19
  83              		.thumb
  84              		.syntax unified
  85              	.LBE7:
  86              	.LBE6:
  82:Core/Src/Bootloader.c **** 
  83:Core/Src/Bootloader.c **** Jump();
  87              		.loc 1 83 1 is_stmt 1 view .LVU20
  88 0026 A847     		blx	r5
  89              	.LVL6:
  84:Core/Src/Bootloader.c **** 
  85:Core/Src/Bootloader.c **** }
  90              		.loc 1 85 1 is_stmt 0 view .LVU21
  91 0028 70BD     		pop	{r4, r5, r6, pc}
  92              	.LVL7:
  93              	.L4:
  94              		.loc 1 85 1 view .LVU22
  95 002a 00BF     		.align	2
  96              	.L3:
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 10


  97 002c 00400008 		.word	134234112
  98              		.cfi_endproc
  99              	.LFE65:
 101              		.section	.text.Error_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	Error_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu softvfp
 109              	Error_Handler:
 110              	.LFB68:
  86:Core/Src/Bootloader.c **** /* USER CODE END PFP */
  87:Core/Src/Bootloader.c **** 
  88:Core/Src/Bootloader.c **** /* Private user code ---------------------------------------------------------*/
  89:Core/Src/Bootloader.c **** /* USER CODE BEGIN 0 */
  90:Core/Src/Bootloader.c **** 
  91:Core/Src/Bootloader.c **** /* USER CODE END 0 */
  92:Core/Src/Bootloader.c **** 
  93:Core/Src/Bootloader.c **** /**
  94:Core/Src/Bootloader.c ****   * @brief  The application entry point.
  95:Core/Src/Bootloader.c ****   * @retval int
  96:Core/Src/Bootloader.c ****   */
  97:Core/Src/Bootloader.c **** int main(void)
  98:Core/Src/Bootloader.c **** {
  99:Core/Src/Bootloader.c ****   /* USER CODE BEGIN 1 */
 100:Core/Src/Bootloader.c **** 
 101:Core/Src/Bootloader.c ****   /* USER CODE END 1 */
 102:Core/Src/Bootloader.c **** 
 103:Core/Src/Bootloader.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/Bootloader.c **** 
 105:Core/Src/Bootloader.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/Bootloader.c ****   HAL_Init();
 107:Core/Src/Bootloader.c **** 
 108:Core/Src/Bootloader.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/Bootloader.c **** 
 110:Core/Src/Bootloader.c ****   /* USER CODE END Init */
 111:Core/Src/Bootloader.c **** 
 112:Core/Src/Bootloader.c ****   /* Configure the system clock */
 113:Core/Src/Bootloader.c ****   SystemClock_Config();
 114:Core/Src/Bootloader.c **** 
 115:Core/Src/Bootloader.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/Bootloader.c **** 
 117:Core/Src/Bootloader.c ****   /* USER CODE END SysInit */
 118:Core/Src/Bootloader.c **** 
 119:Core/Src/Bootloader.c ****   /* Initialize all configured peripherals */
 120:Core/Src/Bootloader.c ****   MX_GPIO_Init();
 121:Core/Src/Bootloader.c ****   MX_CRC_Init();
 122:Core/Src/Bootloader.c ****   MX_USART1_UART_Init();
 123:Core/Src/Bootloader.c ****   MX_TIM2_Init();
 124:Core/Src/Bootloader.c ****   /* USER CODE BEGIN 2 */
 125:Core/Src/Bootloader.c ****   
 126:Core/Src/Bootloader.c ****   
 127:Core/Src/Bootloader.c **** 	if(HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_12)         ||      //Boutton in toggled during start-up
 128:Core/Src/Bootloader.c **** 
 129:Core/Src/Bootloader.c ****     (test==1)                                     ||      //Bootloader was issued by main app after
 130:Core/Src/Bootloader.c **** 
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 11


 131:Core/Src/Bootloader.c ****     *(volatile uint32_t *)App_Adress==0xFFFF     // ||      //App wasn't flashed
 132:Core/Src/Bootloader.c ****   
 133:Core/Src/Bootloader.c ****     )
 134:Core/Src/Bootloader.c ****   
 135:Core/Src/Bootloader.c ****   {
 136:Core/Src/Bootloader.c ****         
 137:Core/Src/Bootloader.c ****         HAL_GPIO_WritePin(GPIOA,GPIO_PIN_4,1);
 138:Core/Src/Bootloader.c ****         HAL_Delay(2000);
 139:Core/Src/Bootloader.c ****         
 140:Core/Src/Bootloader.c ****         JumpToMain();
 141:Core/Src/Bootloader.c ****         
 142:Core/Src/Bootloader.c ****   }
 143:Core/Src/Bootloader.c **** 	else {
 144:Core/Src/Bootloader.c ****     JumpToMain();}
 145:Core/Src/Bootloader.c ****   /* USER CODE END 2 */
 146:Core/Src/Bootloader.c **** 
 147:Core/Src/Bootloader.c ****   /* Infinite loop */
 148:Core/Src/Bootloader.c ****   /* USER CODE BEGIN WHILE */
 149:Core/Src/Bootloader.c ****   while (1)
 150:Core/Src/Bootloader.c ****   {
 151:Core/Src/Bootloader.c ****     /* USER CODE END WHILE */
 152:Core/Src/Bootloader.c **** 
 153:Core/Src/Bootloader.c ****     /* USER CODE BEGIN 3 */
 154:Core/Src/Bootloader.c ****   }
 155:Core/Src/Bootloader.c ****   /* USER CODE END 3 */
 156:Core/Src/Bootloader.c **** }
 157:Core/Src/Bootloader.c **** 
 158:Core/Src/Bootloader.c **** /**
 159:Core/Src/Bootloader.c ****   * @brief System Clock Configuration
 160:Core/Src/Bootloader.c ****   * @retval None
 161:Core/Src/Bootloader.c ****   */
 162:Core/Src/Bootloader.c **** void SystemClock_Config(void)
 163:Core/Src/Bootloader.c **** {
 164:Core/Src/Bootloader.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 165:Core/Src/Bootloader.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 166:Core/Src/Bootloader.c **** 
 167:Core/Src/Bootloader.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 168:Core/Src/Bootloader.c ****   * in the RCC_OscInitTypeDef structure.
 169:Core/Src/Bootloader.c ****   */
 170:Core/Src/Bootloader.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 171:Core/Src/Bootloader.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 172:Core/Src/Bootloader.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 173:Core/Src/Bootloader.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 174:Core/Src/Bootloader.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 175:Core/Src/Bootloader.c ****   {
 176:Core/Src/Bootloader.c ****     Error_Handler();
 177:Core/Src/Bootloader.c ****   }
 178:Core/Src/Bootloader.c ****   /** Initializes the CPU, AHB and APB buses clocks
 179:Core/Src/Bootloader.c ****   */
 180:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 181:Core/Src/Bootloader.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 182:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 183:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 185:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 186:Core/Src/Bootloader.c **** 
 187:Core/Src/Bootloader.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 12


 188:Core/Src/Bootloader.c ****   {
 189:Core/Src/Bootloader.c ****     Error_Handler();
 190:Core/Src/Bootloader.c ****   }
 191:Core/Src/Bootloader.c **** }
 192:Core/Src/Bootloader.c **** 
 193:Core/Src/Bootloader.c **** /* USER CODE BEGIN 4 */
 194:Core/Src/Bootloader.c **** 
 195:Core/Src/Bootloader.c **** /* USER CODE END 4 */
 196:Core/Src/Bootloader.c **** 
 197:Core/Src/Bootloader.c **** /**
 198:Core/Src/Bootloader.c ****   * @brief  This function is executed in case of error occurrence.
 199:Core/Src/Bootloader.c ****   * @retval None
 200:Core/Src/Bootloader.c ****   */
 201:Core/Src/Bootloader.c **** void Error_Handler(void)
 202:Core/Src/Bootloader.c **** {
 111              		.loc 1 202 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 203:Core/Src/Bootloader.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 204:Core/Src/Bootloader.c ****   /* User can add his own implementation to report the HAL error return state */
 205:Core/Src/Bootloader.c ****   __disable_irq();
 117              		.loc 1 205 3 view .LVU24
 118              	.LBB8:
 119              	.LBI8:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 120              		.loc 2 140 27 view .LVU25
 121              	.LBB9:
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 122              		.loc 2 142 3 view .LVU26
 123              		.syntax unified
 124              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 125 0000 72B6     		cpsid i
 126              	@ 0 "" 2
 127              		.thumb
 128              		.syntax unified
 129              	.L6:
 130              	.LBE9:
 131              	.LBE8:
 206:Core/Src/Bootloader.c ****   while (1)
 132              		.loc 1 206 3 discriminator 1 view .LVU27
 207:Core/Src/Bootloader.c ****   {
 208:Core/Src/Bootloader.c ****   }
 133              		.loc 1 208 3 discriminator 1 view .LVU28
 206:Core/Src/Bootloader.c ****   while (1)
 134              		.loc 1 206 9 discriminator 1 view .LVU29
 135 0002 FEE7     		b	.L6
 136              		.cfi_endproc
 137              	.LFE68:
 139              		.section	.text.SystemClock_Config,"ax",%progbits
 140              		.align	1
 141              		.global	SystemClock_Config
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 13


 145              		.fpu softvfp
 147              	SystemClock_Config:
 148              	.LFB67:
 163:Core/Src/Bootloader.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149              		.loc 1 163 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 64
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 00B5     		push	{lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 4
 156              		.cfi_offset 14, -4
 157 0002 91B0     		sub	sp, sp, #68
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 72
 164:Core/Src/Bootloader.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 160              		.loc 1 164 3 view .LVU31
 164:Core/Src/Bootloader.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 161              		.loc 1 164 22 is_stmt 0 view .LVU32
 162 0004 2822     		movs	r2, #40
 163 0006 0021     		movs	r1, #0
 164 0008 06A8     		add	r0, sp, #24
 165 000a FFF7FEFF 		bl	memset
 166              	.LVL8:
 165:Core/Src/Bootloader.c **** 
 167              		.loc 1 165 3 is_stmt 1 view .LVU33
 165:Core/Src/Bootloader.c **** 
 168              		.loc 1 165 22 is_stmt 0 view .LVU34
 169 000e 0023     		movs	r3, #0
 170 0010 0193     		str	r3, [sp, #4]
 171 0012 0293     		str	r3, [sp, #8]
 172 0014 0393     		str	r3, [sp, #12]
 173 0016 0493     		str	r3, [sp, #16]
 174 0018 0593     		str	r3, [sp, #20]
 170:Core/Src/Bootloader.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 175              		.loc 1 170 3 is_stmt 1 view .LVU35
 170:Core/Src/Bootloader.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 176              		.loc 1 170 36 is_stmt 0 view .LVU36
 177 001a 0223     		movs	r3, #2
 178 001c 0693     		str	r3, [sp, #24]
 171:Core/Src/Bootloader.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 179              		.loc 1 171 3 is_stmt 1 view .LVU37
 171:Core/Src/Bootloader.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 180              		.loc 1 171 30 is_stmt 0 view .LVU38
 181 001e 0123     		movs	r3, #1
 182 0020 0A93     		str	r3, [sp, #40]
 172:Core/Src/Bootloader.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 183              		.loc 1 172 3 is_stmt 1 view .LVU39
 172:Core/Src/Bootloader.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 184              		.loc 1 172 41 is_stmt 0 view .LVU40
 185 0022 1023     		movs	r3, #16
 186 0024 0B93     		str	r3, [sp, #44]
 173:Core/Src/Bootloader.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187              		.loc 1 173 3 is_stmt 1 view .LVU41
 174:Core/Src/Bootloader.c ****   {
 188              		.loc 1 174 3 view .LVU42
 174:Core/Src/Bootloader.c ****   {
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 14


 189              		.loc 1 174 7 is_stmt 0 view .LVU43
 190 0026 06A8     		add	r0, sp, #24
 191 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 192              	.LVL9:
 174:Core/Src/Bootloader.c ****   {
 193              		.loc 1 174 6 view .LVU44
 194 002c 68B9     		cbnz	r0, .L11
 180:Core/Src/Bootloader.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 195              		.loc 1 180 3 is_stmt 1 view .LVU45
 180:Core/Src/Bootloader.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 196              		.loc 1 180 31 is_stmt 0 view .LVU46
 197 002e 0F23     		movs	r3, #15
 198 0030 0193     		str	r3, [sp, #4]
 182:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 199              		.loc 1 182 3 is_stmt 1 view .LVU47
 182:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 200              		.loc 1 182 34 is_stmt 0 view .LVU48
 201 0032 0021     		movs	r1, #0
 202 0034 0291     		str	r1, [sp, #8]
 183:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 203              		.loc 1 183 3 is_stmt 1 view .LVU49
 183:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 204              		.loc 1 183 35 is_stmt 0 view .LVU50
 205 0036 0391     		str	r1, [sp, #12]
 184:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 206              		.loc 1 184 3 is_stmt 1 view .LVU51
 184:Core/Src/Bootloader.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 207              		.loc 1 184 36 is_stmt 0 view .LVU52
 208 0038 0491     		str	r1, [sp, #16]
 185:Core/Src/Bootloader.c **** 
 209              		.loc 1 185 3 is_stmt 1 view .LVU53
 185:Core/Src/Bootloader.c **** 
 210              		.loc 1 185 36 is_stmt 0 view .LVU54
 211 003a 0591     		str	r1, [sp, #20]
 187:Core/Src/Bootloader.c ****   {
 212              		.loc 1 187 3 is_stmt 1 view .LVU55
 187:Core/Src/Bootloader.c ****   {
 213              		.loc 1 187 7 is_stmt 0 view .LVU56
 214 003c 01A8     		add	r0, sp, #4
 215 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 216              	.LVL10:
 187:Core/Src/Bootloader.c ****   {
 217              		.loc 1 187 6 view .LVU57
 218 0042 20B9     		cbnz	r0, .L12
 191:Core/Src/Bootloader.c **** 
 219              		.loc 1 191 1 view .LVU58
 220 0044 11B0     		add	sp, sp, #68
 221              	.LCFI3:
 222              		.cfi_remember_state
 223              		.cfi_def_cfa_offset 4
 224              		@ sp needed
 225 0046 5DF804FB 		ldr	pc, [sp], #4
 226              	.L11:
 227              	.LCFI4:
 228              		.cfi_restore_state
 176:Core/Src/Bootloader.c ****   }
 229              		.loc 1 176 5 is_stmt 1 view .LVU59
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 15


 230 004a FFF7FEFF 		bl	Error_Handler
 231              	.LVL11:
 232              	.L12:
 189:Core/Src/Bootloader.c ****   }
 233              		.loc 1 189 5 view .LVU60
 234 004e FFF7FEFF 		bl	Error_Handler
 235              	.LVL12:
 236              		.cfi_endproc
 237              	.LFE67:
 239              		.section	.text.main,"ax",%progbits
 240              		.align	1
 241              		.global	main
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu softvfp
 247              	main:
 248              	.LFB66:
  98:Core/Src/Bootloader.c ****   /* USER CODE BEGIN 1 */
 249              		.loc 1 98 1 view -0
 250              		.cfi_startproc
 251              		@ Volatile: function does not return.
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254 0000 08B5     		push	{r3, lr}
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 3, -8
 258              		.cfi_offset 14, -4
 106:Core/Src/Bootloader.c **** 
 259              		.loc 1 106 3 view .LVU62
 260 0002 FFF7FEFF 		bl	HAL_Init
 261              	.LVL13:
 113:Core/Src/Bootloader.c **** 
 262              		.loc 1 113 3 view .LVU63
 263 0006 FFF7FEFF 		bl	SystemClock_Config
 264              	.LVL14:
 120:Core/Src/Bootloader.c ****   MX_CRC_Init();
 265              		.loc 1 120 3 view .LVU64
 266 000a FFF7FEFF 		bl	MX_GPIO_Init
 267              	.LVL15:
 121:Core/Src/Bootloader.c ****   MX_USART1_UART_Init();
 268              		.loc 1 121 3 view .LVU65
 269 000e FFF7FEFF 		bl	MX_CRC_Init
 270              	.LVL16:
 122:Core/Src/Bootloader.c ****   MX_TIM2_Init();
 271              		.loc 1 122 3 view .LVU66
 272 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 273              	.LVL17:
 123:Core/Src/Bootloader.c ****   /* USER CODE BEGIN 2 */
 274              		.loc 1 123 3 view .LVU67
 275 0016 FFF7FEFF 		bl	MX_TIM2_Init
 276              	.LVL18:
 127:Core/Src/Bootloader.c **** 
 277              		.loc 1 127 2 view .LVU68
 127:Core/Src/Bootloader.c **** 
 278              		.loc 1 127 5 is_stmt 0 view .LVU69
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 16


 279 001a 4FF48051 		mov	r1, #4096
 280 001e 0E48     		ldr	r0, .L18
 281 0020 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 282              	.LVL19:
 127:Core/Src/Bootloader.c **** 
 283              		.loc 1 127 4 view .LVU70
 284 0024 48B9     		cbnz	r0, .L14
 129:Core/Src/Bootloader.c **** 
 285              		.loc 1 129 10 discriminator 1 view .LVU71
 286 0026 0D4B     		ldr	r3, .L18+4
 287 0028 1B68     		ldr	r3, [r3]
 127:Core/Src/Bootloader.c **** 
 288              		.loc 1 127 49 discriminator 1 view .LVU72
 289 002a 012B     		cmp	r3, #1
 290 002c 05D0     		beq	.L14
 131:Core/Src/Bootloader.c ****   
 291              		.loc 1 131 5 view .LVU73
 292 002e 0C4B     		ldr	r3, .L18+8
 293 0030 1A68     		ldr	r2, [r3]
 129:Core/Src/Bootloader.c **** 
 294              		.loc 1 129 51 view .LVU74
 295 0032 4FF6FF73 		movw	r3, #65535
 296 0036 9A42     		cmp	r2, r3
 297 0038 0BD1     		bne	.L15
 298              	.L14:
 137:Core/Src/Bootloader.c ****         HAL_Delay(2000);
 299              		.loc 1 137 9 is_stmt 1 view .LVU75
 300 003a 0122     		movs	r2, #1
 301 003c 1021     		movs	r1, #16
 302 003e 0948     		ldr	r0, .L18+12
 303 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 304              	.LVL20:
 138:Core/Src/Bootloader.c ****         
 305              		.loc 1 138 9 view .LVU76
 306 0044 4FF4FA60 		mov	r0, #2000
 307 0048 FFF7FEFF 		bl	HAL_Delay
 308              	.LVL21:
 140:Core/Src/Bootloader.c ****         
 309              		.loc 1 140 9 view .LVU77
 310 004c FFF7FEFF 		bl	JumpToMain
 311              	.LVL22:
 312              	.L16:
 149:Core/Src/Bootloader.c ****   {
 313              		.loc 1 149 3 discriminator 1 view .LVU78
 154:Core/Src/Bootloader.c ****   /* USER CODE END 3 */
 314              		.loc 1 154 3 discriminator 1 view .LVU79
 149:Core/Src/Bootloader.c ****   {
 315              		.loc 1 149 9 discriminator 1 view .LVU80
 316 0050 FEE7     		b	.L16
 317              	.L15:
 144:Core/Src/Bootloader.c ****   /* USER CODE END 2 */
 318              		.loc 1 144 5 view .LVU81
 319 0052 FFF7FEFF 		bl	JumpToMain
 320              	.LVL23:
 321 0056 FBE7     		b	.L16
 322              	.L19:
 323              		.align	2
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 17


 324              	.L18:
 325 0058 000C0140 		.word	1073810432
 326 005c 00000000 		.word	.LANCHOR0
 327 0060 00400008 		.word	134234112
 328 0064 00080140 		.word	1073809408
 329              		.cfi_endproc
 330              	.LFE66:
 332              		.global	test
 333              		.section	.noinit,"aw"
 334              		.align	2
 335              		.set	.LANCHOR0,. + 0
 338              	test:
 339 0000 00000000 		.space	4
 340              		.text
 341              	.Letext0:
 342              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 343              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 344              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 345              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 346              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 347              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 348              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 349              		.file 10 "Core/Inc/gpio.h"
 350              		.file 11 "Core/Inc/crc.h"
 351              		.file 12 "Core/Inc/usart.h"
 352              		.file 13 "Core/Inc/tim.h"
 353              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 354              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 355              		.file 16 "<built-in>"
ARM GAS  C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 Bootloader.c
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:16     .text.JumpToMain:00000000 $t
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:24     .text.JumpToMain:00000000 JumpToMain
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:97     .text.JumpToMain:0000002c $d
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:102    .text.Error_Handler:00000000 $t
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:109    .text.Error_Handler:00000000 Error_Handler
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:140    .text.SystemClock_Config:00000000 $t
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:147    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:240    .text.main:00000000 $t
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:247    .text.main:00000000 main
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:325    .text.main:00000058 $d
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:338    .noinit:00000000 test
C:\Users\T470S\AppData\Local\Temp\cckt9eSu.s:334    .noinit:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_DeInit
HAL_DeInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CRC_Init
MX_USART1_UART_Init
MX_TIM2_Init
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
HAL_Delay
